// API URL
const API_URL = window.location.origin + '/api';

// –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
const POPULAR_CRYPTOS = {
    'BTC': { id: 'BTC', symbol: 'BTC', name: 'Bitcoin', emoji: '‚Çø' },
    'ETH': { id: 'ETH', symbol: 'ETH', name: 'Ethereum', emoji: 'Œû' },
    'BNB': { id: 'BNB', symbol: 'BNB', name: 'Binance Coin', emoji: 'üî∂' },
    'SOL': { id: 'SOL', symbol: 'SOL', name: 'Solana', emoji: '‚óé' },
    'XRP': { id: 'XRP', symbol: 'XRP', name: 'Ripple', emoji: '‚úï' },
    'ADA': { id: 'ADA', symbol: 'ADA', name: 'Cardano', emoji: '‚Ç≥' },
    'DOGE': { id: 'DOGE', symbol: 'DOGE', name: 'Dogecoin', emoji: 'üêï' },
    'DOT': { id: 'DOT', symbol: 'DOT', name: 'Polkadot', emoji: '‚óè' }
};

let selectedCrypto = null;
let priceChart = null;
let predictionChart = null;
let searchTimeout = null;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
const tg = window.Telegram.WebApp;
tg.expand();
tg.ready();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
function init() {
    renderCryptoGrid();
    setupEventListeners();
    setupSearch();
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–∏—Å–∫–∞
function setupSearch() {
    const searchInput = document.getElementById('searchInput');
    const searchResults = document.getElementById('searchResults');

    searchInput.addEventListener('input', function(e) {
        const query = e.target.value.trim();

        // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–∞—É—Ç
        if (searchTimeout) {
            clearTimeout(searchTimeout);
        }

        // –°–∫—Ä—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –ø—É—Å—Ç–æ–π
        if (query.length === 0) {
            searchResults.style.display = 'none';
            return;
        }

        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–∏—Å–∫ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
        searchTimeout = setTimeout(() => {
            performSearch(query);
        }, 300);
    });

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –ø–æ–∏—Å–∫–∞
    document.addEventListener('click', function(e) {
        if (!searchInput.contains(e.target) && !searchResults.contains(e.target)) {
            searchResults.style.display = 'none';
        }
    });
}

// –ü–æ–∏—Å–∫ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç
async function performSearch(query) {
    if (query.length < 1) return;

    const searchResults = document.getElementById('searchResults');

    try {
        const response = await fetch(`${API_URL}/search?q=${encodeURIComponent(query)}`);
        const data = await response.json();

        if (data.success) {
            displaySearchResults(data.data);
        } else {
            searchResults.style.display = 'none';
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞:', error);
        searchResults.style.display = 'none';
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
function displaySearchResults(results) {
    const searchResults = document.getElementById('searchResults');

    if (results.length === 0) {
        searchResults.innerHTML = '<div class="search-result-item">–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</div>';
        searchResults.style.display = 'block';
        return;
    }

    searchResults.innerHTML = results.map(crypto => `
        <div class="search-result-item" onclick="selectCryptoFromSearch('${crypto.id}', '${crypto.symbol}', '${crypto.name}')">
            <div class="crypto-symbol">${crypto.symbol}</div>
            <div class="crypto-name">${crypto.name}</div>
        </div>
    `).join('');

    searchResults.style.display = 'block';
}

// –í—ã–±–æ—Ä –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –∏–∑ –ø–æ–∏—Å–∫–∞
function selectCryptoFromSearch(id, symbol, name) {
    selectedCrypto = id;

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
    document.getElementById('searchResults').style.display = 'none';
    document.getElementById('searchInput').value = '';

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    showLoading('–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...');
    loadCryptoData(id, symbol, name);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç
async function loadAllCryptocurrencies() {
    showLoading('–ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞...');

    try {
        const response = await fetch(`${API_URL}/cryptos/all`);
        const data = await response.json();

        if (data.success) {
            displayAllCryptocurrencies(data.data);
        } else {
            tg.showAlert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        tg.showAlert('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è');
    } finally {
        hideLoading();
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
function displayAllCryptocurrencies(cryptos) {
    const cryptoList = document.getElementById('cryptoList');
    const modal = document.getElementById('allCryptosModal');

    cryptoList.innerHTML = cryptos.map(crypto => `
        <div class="crypto-list-item" onclick="selectCryptoFromList('${crypto.id}', '${crypto.symbol}', '${crypto.name}')">
            <div class="crypto-symbol">${crypto.symbol}</div>
            <div class="crypto-name">${crypto.name}</div>
        </div>
    `).join('');

    modal.classList.add('show');
}

// –í—ã–±–æ—Ä –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –∏–∑ —Å–ø–∏—Å–∫–∞
function selectCryptoFromList(id, symbol, name) {
    selectedCrypto = id;

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    document.getElementById('allCryptosModal').classList.remove('show');

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    showLoading('–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...');
    loadCryptoData(id, symbol, name);
}

// –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (–∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏) –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
function renderCryptoGrid() {
    const grid = document.getElementById('cryptoGrid');
    grid.innerHTML = '';

    Object.entries(POPULAR_CRYPTOS).forEach(([id, data]) => {
        const card = document.createElement('div');
        card.className = 'crypto-card';
        card.innerHTML = `
            <div class="crypto-emoji">${data.emoji}</div>
            <div class="crypto-symbol-small">${data.symbol}</div>
        `;
        card.onclick = () => loadCryptoData(data.id, data.symbol, data.name);
        grid.appendChild(card);
    });
}

function setupEventListeners() {
    document.getElementById('predictBtn').onclick = makePrediction;
    document.getElementById('allCryptosBtn').onclick = loadAllCryptocurrencies;
    document.getElementById('closeModal').onclick = () => {
        document.getElementById('allCryptosModal').classList.remove('show');
    };
}

async function loadCryptoData(cryptoId, symbol, name) {
    selectedCrypto = cryptoId;
    showLoading('–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...');

    try {
        const response = await fetch(`${API_URL}/crypto/${cryptoId}`);
        const data = await response.json();

        if (data.success) {
            displayCryptoData(data.data, symbol, name);
            document.getElementById('predictBtn').classList.remove('hidden');
        } else {
            showError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
        }
    } catch (error) {
        console.error('Error:', error);
        showError('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É');
    } finally {
        hideLoading();
    }
}

// –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (displayCryptoData, displayPriceChart, displayIndicators,
// makePrediction, displayPrediction –∏ —Ç.–¥.) –æ—Å—Ç–∞—é—Ç—Å—è –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏
// ... [–∑–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ app.js]

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function showLoading(text) {
    document.getElementById('loading').classList.remove('hidden');
    document.getElementById('loadingText').textContent = text;
}

function hideLoading() {
    document.getElementById('loading').classList.add('hidden');
}

function showError(message) {
    tg.showAlert(message);
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
init();